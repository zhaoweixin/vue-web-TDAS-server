'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var isObject = function isObject(obj) {
    return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';
};

var isEmptyObject = function isEmptyObject(obj) {
    return !Object.keys(obj).length;
};

module.exports = function (divider, obj) {
    if (!obj) {
        obj = divider;
        divider = '.';
    }

    check(divider, obj);

    return keys(divider, '', obj);
};

function check(divider, obj) {
    if (typeof divider !== 'string') throw Error('divider should be a string!');

    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') throw Error('obj should be an object!');
}

function keys(divider, path, obj, array) {
    if (!array) array = [];

    if (!obj || !isObject(obj) || isEmptyObject(obj)) array.push(path);else Object.keys(obj).forEach(function (key) {
        var current = !path ? key : [path, key].join(divider);

        keys(divider, current, obj[key], array);
    });

    return array;
}